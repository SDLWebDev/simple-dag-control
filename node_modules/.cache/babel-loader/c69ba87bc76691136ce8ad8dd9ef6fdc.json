{"ast":null,"code":"import _classCallCheck from \"/home/david/code/_sandbox/jointjs-dag-test/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/david/code/_sandbox/jointjs-dag-test/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/david/code/_sandbox/jointjs-dag-test/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/david/code/_sandbox/jointjs-dag-test/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/david/code/_sandbox/jointjs-dag-test/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/david/code/_sandbox/jointjs-dag-test/src/index.js\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./styles.css\";\nimport joint from \"jointjs/index\"; //import Shapes from \"../jointjs-configuration/Shapes\";\n\nvar App =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(App, _React$Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n    _this.paperContainer = React.createRef();\n    _this.layoutControls = React.createRef();\n    return _this;\n  } //this.paperContainer.current,\n\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var Shape = joint.dia.Element.define(\"demo.Shape\", {\n        size: {\n          width: 100,\n          height: 50\n        },\n        attrs: {\n          body: {\n            refWidth: \"100%\",\n            refHeight: \"100%\",\n            fill: \"ivory\",\n            stroke: \"gray\",\n            strokeWidth: 2,\n            rx: 10,\n            ry: 10\n          },\n          label: {\n            refX: \"50%\",\n            refY: \"50%\",\n            yAlignment: \"middle\",\n            xAlignment: \"middle\",\n            fontSize: 30\n          }\n        }\n      }, {\n        markup: [{\n          tagName: \"rect\",\n          selector: \"body\"\n        }, {\n          tagName: \"text\",\n          selector: \"label\"\n        }],\n        setText: function setText(text) {\n          return this.attr(\"label/text\", text || \"\");\n        }\n      });\n      var Link = joint.dia.Link.define(\"demo.Link\", {\n        attrs: {\n          line: {\n            connection: true,\n            stroke: \"gray\",\n            strokeWidth: 2,\n            pointerEvents: \"none\",\n            targetMarker: {\n              type: \"path\",\n              fill: \"gray\",\n              stroke: \"none\",\n              d: \"M 10 -10 0 0 10 10 z\"\n            }\n          }\n        },\n        connector: {\n          name: \"rounded\"\n        },\n        z: -1,\n        weight: 1,\n        minLen: 1,\n        labelPosition: \"c\",\n        labelOffset: 10,\n        labelSize: {\n          width: 50,\n          height: 30\n        },\n        labels: [{\n          markup: [{\n            tagName: \"rect\",\n            selector: \"labelBody\"\n          }, {\n            tagName: \"text\",\n            selector: \"labelText\"\n          }],\n          attrs: {\n            labelText: {\n              fill: \"gray\",\n              textAnchor: \"middle\",\n              refY: 5,\n              refY2: \"-50%\",\n              fontSize: 20,\n              cursor: \"pointer\"\n            },\n            labelBody: {\n              fill: \"lightgray\",\n              stroke: \"gray\",\n              strokeWidth: 2,\n              refWidth: \"100%\",\n              refHeight: \"100%\",\n              refX: \"-50%\",\n              refY: \"-50%\",\n              rx: 5,\n              ry: 5\n            }\n          },\n          size: {\n            width: 50,\n            height: 30\n          }\n        }]\n      }, {\n        markup: [{\n          tagName: \"path\",\n          selector: \"line\",\n          attributes: {\n            fill: \"none\"\n          }\n        }],\n        connect: function connect(sourceId, targetId) {\n          return this.set({\n            source: {\n              id: sourceId\n            },\n            target: {\n              id: targetId\n            }\n          });\n        },\n        setLabelText: function setLabelText(text) {\n          return this.prop(\"labels/0/attrs/labelText/text\", text || \"\");\n        }\n      });\n      var LayoutControls = joint.mvc.View.extend({\n        events: {\n          change: \"layout\",\n          input: \"layout\"\n        },\n        options: {\n          padding: 50\n        },\n        init: function init() {\n          var options = this.options;\n\n          if (options.adjacencyList) {\n            options.cells = this.buildGraphFromAdjacencyList(options.adjacencyList);\n          }\n\n          this.listenTo(options.paper.model, \"change\", function (cell, opt) {\n            if (opt.layout) {\n              this.layout();\n            }\n          });\n        },\n        layout: function layout() {\n          var paper = this.options.paper;\n          var graph = paper.model;\n          var cells = this.options.cells;\n          joint.layout.DirectedGraph.layout(cells, this.getLayoutOptions());\n\n          if (graph.getCells().length === 0) {\n            // The graph could be empty at the beginning to avoid cells rendering\n            // and their subsequent update when elements are translated\n            graph.resetCells(cells);\n          }\n\n          paper.fitToContent({\n            padding: this.options.padding,\n            allowNewOrigin: \"any\"\n          });\n          this.trigger(\"layout\");\n        },\n        getLayoutOptions: function getLayoutOptions() {\n          return {\n            setVertices: true,\n            setLabels: true,\n            ranker: this.$(\"#ranker\").val(),\n            rankDir: this.$(\"#rankdir\").val(),\n            align: this.$(\"#align\").val(),\n            rankSep: parseInt(this.$(\"#ranksep\").val(), 10),\n            edgeSep: parseInt(this.$(\"#edgesep\").val(), 10),\n            nodeSep: parseInt(this.$(\"#nodesep\").val(), 10)\n          };\n        },\n        buildGraphFromAdjacencyList: function buildGraphFromAdjacencyList(adjacencyList) {\n          var elements = [];\n          var links = [];\n          Object.keys(adjacencyList).forEach(function (parentLabel) {\n            // Add element\n            elements.push(new Shape({\n              id: parentLabel\n            }).setText(parentLabel)); // Add links\n\n            adjacencyList[parentLabel].forEach(function (childLabel) {\n              links.push(new Link().connect(parentLabel, childLabel).setLabelText(parentLabel + \"-\" + childLabel));\n            });\n          }); // Links must be added after all the elements. This is because when the links\n          // are added to the graph, link source/target\n          // elements must be in the graph already.\n\n          return elements.concat(links);\n        }\n      });\n      var LinkControls = joint.mvc.View.extend({\n        highlighter: {\n          name: \"stroke\",\n          options: {\n            attrs: {\n              stroke: \"lightcoral\",\n              \"stroke-width\": 4\n            }\n          }\n        },\n        events: {\n          change: \"updateLink\",\n          input: \"updateLink\"\n        },\n        init: function init() {\n          this.highlight();\n          this.updateControls();\n        },\n        updateLink: function updateLink() {\n          this.options.cellView.model.set(this.getModelAttributes(), {\n            layout: true\n          });\n        },\n        updateControls: function updateControls() {\n          var link = this.options.cellView.model;\n          this.$(\"#labelpos\").val(link.get(\"labelPosition\"));\n          this.$(\"#labeloffset\").val(link.get(\"labelOffset\"));\n          this.$(\"#minlen\").val(link.get(\"minLen\"));\n          this.$(\"#weight\").val(link.get(\"weight\"));\n        },\n        getModelAttributes: function getModelAttributes() {\n          return {\n            minLen: parseInt(this.$(\"#minlen\").val(), 10),\n            weight: parseInt(this.$(\"#weight\").val(), 10),\n            labelPosition: this.$(\"#labelpos\").val(),\n            labelOffset: parseInt(this.$(\"#labeloffset\").val(), 10)\n          };\n        },\n        onRemove: function onRemove() {\n          this.unhighlight();\n        },\n        highlight: function highlight() {\n          this.options.cellView.highlight(\"rect\", {\n            highlighter: this.highlighter\n          });\n        },\n        unhighlight: function unhighlight() {\n          this.options.cellView.unhighlight(\"rect\", {\n            highlighter: this.highlighter\n          });\n        }\n      }, {\n        create: function create(linkView) {\n          this.remove();\n          this.instance = new this({\n            el: this.template.cloneNode(true),\n            cellView: linkView\n          });\n          this.instance.$el.insertAfter(\"#layout-controls\");\n        },\n        remove: function remove() {\n          if (this.instance) {\n            this.instance.remove();\n            this.instance = null;\n          }\n        },\n        refresh: function refresh() {\n          if (this.instance) {\n            this.instance.unhighlight();\n            this.instance.highlight();\n          }\n        },\n        instance: null,\n        template: document.getElementById(\"link-controls-template\").content.querySelector(\".controls\")\n      });\n      var controls = new LayoutControls({\n        el: this.layoutControls.current,\n        paper: new joint.dia.Paper({\n          el: this.paperContainer.current,\n          interactive: function interactive(cellView) {\n            return cellView.model.isElement();\n          }\n        }).on({\n          \"link:pointerdown\": LinkControls.create,\n          \"blank:pointerdown element:pointerdown\": LinkControls.remove\n        }, LinkControls),\n        adjacencyList: {\n          a: [\"b\", \"c\", \"d\"],\n          b: [\"d\", \"e\"],\n          c: [],\n          d: [],\n          e: [\"e\"],\n          f: [],\n          g: [\"b\", \"i\"],\n          h: [\"f\"],\n          i: [\"f\", \"h\"]\n        }\n      }).on({\n        layout: LinkControls.refresh\n      }, LinkControls);\n      controls.layout();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 367\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        id: \"layout-controls\",\n        className: \"controls\",\n        ref: this.layoutControls,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 368\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        for: \"ranker\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 373\n        },\n        __self: this\n      }, \"Ranker:\"), React.createElement(\"select\", {\n        id: \"ranker\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 374\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        value: \"network-simplex\",\n        selected: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 375\n        },\n        __self: this\n      }, \"network-simplex\"), React.createElement(\"option\", {\n        value: \"tight-tree\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 378\n        },\n        __self: this\n      }, \"tight-tree\"), React.createElement(\"option\", {\n        value: \"longest-path\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 379\n        },\n        __self: this\n      }, \"longer-path\")), React.createElement(\"label\", {\n        for: \"rankdir\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 381\n        },\n        __self: this\n      }, \"RankDir:\"), React.createElement(\"select\", {\n        id: \"rankdir\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 382\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        value: \"TB\",\n        selected: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 383\n        },\n        __self: this\n      }, \"TB\"), React.createElement(\"option\", {\n        value: \"BT\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 386\n        },\n        __self: this\n      }, \"BT\"), React.createElement(\"option\", {\n        value: \"RL\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 387\n        },\n        __self: this\n      }, \"RL\"), React.createElement(\"option\", {\n        value: \"LR\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 388\n        },\n        __self: this\n      }, \"LR\")), React.createElement(\"label\", {\n        for: \"align\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 390\n        },\n        __self: this\n      }, \"Align:\"), React.createElement(\"select\", {\n        id: \"align\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 391\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        value: \"UL\",\n        selected: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 392\n        },\n        __self: this\n      }, \"UL\"), React.createElement(\"option\", {\n        value: \"UR\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 395\n        },\n        __self: this\n      }, \"UR\"), React.createElement(\"option\", {\n        value: \"DL\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 396\n        },\n        __self: this\n      }, \"DL\"), React.createElement(\"option\", {\n        value: \"DR\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 397\n        },\n        __self: this\n      }, \"DR\")), React.createElement(\"label\", {\n        for: \"ranksep\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 399\n        },\n        __self: this\n      }, \"RankSep:\"), React.createElement(\"input\", {\n        id: \"ranksep\",\n        type: \"range\",\n        min: \"1\",\n        max: \"100\",\n        value: \"50\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 400\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        for: \"edgesep\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 401\n        },\n        __self: this\n      }, \"EdgeSep:\"), React.createElement(\"input\", {\n        id: \"edgesep\",\n        type: \"range\",\n        min: \"1\",\n        max: \"100\",\n        value: \"50\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 402\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        for: \"nodesep\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 403\n        },\n        __self: this\n      }, \"NodeSep:\"), React.createElement(\"input\", {\n        id: \"nodesep\",\n        type: \"range\",\n        min: \"1\",\n        max: \"100\",\n        value: \"50\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 404\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        id: \"paper\",\n        className: \"paper\",\n        ref: this.paperContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 406\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return App;\n}(React.Component);\n\nvar rootElement = document.getElementById(\"root\");\nReactDOM.render(React.createElement(App, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 413\n  },\n  __self: this\n}), rootElement);","map":{"version":3,"sources":["/home/david/code/_sandbox/jointjs-dag-test/src/index.js"],"names":["React","ReactDOM","joint","App","props","paperContainer","createRef","layoutControls","Shape","dia","Element","define","size","width","height","attrs","body","refWidth","refHeight","fill","stroke","strokeWidth","rx","ry","label","refX","refY","yAlignment","xAlignment","fontSize","markup","tagName","selector","setText","text","attr","Link","line","connection","pointerEvents","targetMarker","type","d","connector","name","z","weight","minLen","labelPosition","labelOffset","labelSize","labels","labelText","textAnchor","refY2","cursor","labelBody","attributes","connect","sourceId","targetId","set","source","id","target","setLabelText","prop","LayoutControls","mvc","View","extend","events","change","input","options","padding","init","adjacencyList","cells","buildGraphFromAdjacencyList","listenTo","paper","model","cell","opt","layout","graph","DirectedGraph","getLayoutOptions","getCells","length","resetCells","fitToContent","allowNewOrigin","trigger","setVertices","setLabels","ranker","$","val","rankDir","align","rankSep","parseInt","edgeSep","nodeSep","elements","links","Object","keys","forEach","parentLabel","push","childLabel","concat","LinkControls","highlighter","highlight","updateControls","updateLink","cellView","getModelAttributes","link","get","onRemove","unhighlight","create","linkView","remove","instance","el","template","cloneNode","$el","insertAfter","refresh","document","getElementById","content","querySelector","controls","current","Paper","interactive","isElement","on","a","b","c","e","f","g","h","i","Component","rootElement","render"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport \"./styles.css\";\nimport joint from \"jointjs/index\";\n//import Shapes from \"../jointjs-configuration/Shapes\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.paperContainer = React.createRef();\n    this.layoutControls = React.createRef();\n  }\n\n  //this.paperContainer.current,\n\n  componentDidMount() {\n    var Shape = joint.dia.Element.define(\n      \"demo.Shape\",\n      {\n        size: {\n          width: 100,\n          height: 50\n        },\n        attrs: {\n          body: {\n            refWidth: \"100%\",\n            refHeight: \"100%\",\n            fill: \"ivory\",\n            stroke: \"gray\",\n            strokeWidth: 2,\n            rx: 10,\n            ry: 10\n          },\n          label: {\n            refX: \"50%\",\n            refY: \"50%\",\n            yAlignment: \"middle\",\n            xAlignment: \"middle\",\n            fontSize: 30\n          }\n        }\n      },\n      {\n        markup: [\n          {\n            tagName: \"rect\",\n            selector: \"body\"\n          },\n          {\n            tagName: \"text\",\n            selector: \"label\"\n          }\n        ],\n\n        setText: function(text) {\n          return this.attr(\"label/text\", text || \"\");\n        }\n      }\n    );\n\n    var Link = joint.dia.Link.define(\n      \"demo.Link\",\n      {\n        attrs: {\n          line: {\n            connection: true,\n            stroke: \"gray\",\n            strokeWidth: 2,\n            pointerEvents: \"none\",\n            targetMarker: {\n              type: \"path\",\n              fill: \"gray\",\n              stroke: \"none\",\n              d: \"M 10 -10 0 0 10 10 z\"\n            }\n          }\n        },\n        connector: {\n          name: \"rounded\"\n        },\n        z: -1,\n        weight: 1,\n        minLen: 1,\n        labelPosition: \"c\",\n        labelOffset: 10,\n        labelSize: {\n          width: 50,\n          height: 30\n        },\n        labels: [\n          {\n            markup: [\n              {\n                tagName: \"rect\",\n                selector: \"labelBody\"\n              },\n              {\n                tagName: \"text\",\n                selector: \"labelText\"\n              }\n            ],\n            attrs: {\n              labelText: {\n                fill: \"gray\",\n                textAnchor: \"middle\",\n                refY: 5,\n                refY2: \"-50%\",\n                fontSize: 20,\n                cursor: \"pointer\"\n              },\n              labelBody: {\n                fill: \"lightgray\",\n                stroke: \"gray\",\n                strokeWidth: 2,\n                refWidth: \"100%\",\n                refHeight: \"100%\",\n                refX: \"-50%\",\n                refY: \"-50%\",\n                rx: 5,\n                ry: 5\n              }\n            },\n            size: {\n              width: 50,\n              height: 30\n            }\n          }\n        ]\n      },\n      {\n        markup: [\n          {\n            tagName: \"path\",\n            selector: \"line\",\n            attributes: {\n              fill: \"none\"\n            }\n          }\n        ],\n\n        connect: function(sourceId, targetId) {\n          return this.set({\n            source: { id: sourceId },\n            target: { id: targetId }\n          });\n        },\n\n        setLabelText: function(text) {\n          return this.prop(\"labels/0/attrs/labelText/text\", text || \"\");\n        }\n      }\n    );\n    var LayoutControls = joint.mvc.View.extend({\n      events: {\n        change: \"layout\",\n        input: \"layout\"\n      },\n\n      options: {\n        padding: 50\n      },\n\n      init: function() {\n        var options = this.options;\n        if (options.adjacencyList) {\n          options.cells = this.buildGraphFromAdjacencyList(\n            options.adjacencyList\n          );\n        }\n\n        this.listenTo(options.paper.model, \"change\", function(cell, opt) {\n          if (opt.layout) {\n            this.layout();\n          }\n        });\n      },\n\n      layout: function() {\n        var paper = this.options.paper;\n        var graph = paper.model;\n        var cells = this.options.cells;\n\n        joint.layout.DirectedGraph.layout(cells, this.getLayoutOptions());\n\n        if (graph.getCells().length === 0) {\n          // The graph could be empty at the beginning to avoid cells rendering\n          // and their subsequent update when elements are translated\n          graph.resetCells(cells);\n        }\n\n        paper.fitToContent({\n          padding: this.options.padding,\n          allowNewOrigin: \"any\"\n        });\n\n        this.trigger(\"layout\");\n      },\n\n      getLayoutOptions: function() {\n        return {\n          setVertices: true,\n          setLabels: true,\n          ranker: this.$(\"#ranker\").val(),\n          rankDir: this.$(\"#rankdir\").val(),\n          align: this.$(\"#align\").val(),\n          rankSep: parseInt(this.$(\"#ranksep\").val(), 10),\n          edgeSep: parseInt(this.$(\"#edgesep\").val(), 10),\n          nodeSep: parseInt(this.$(\"#nodesep\").val(), 10)\n        };\n      },\n\n      buildGraphFromAdjacencyList: function(adjacencyList) {\n        var elements = [];\n        var links = [];\n\n        Object.keys(adjacencyList).forEach(function(parentLabel) {\n          // Add element\n          elements.push(new Shape({ id: parentLabel }).setText(parentLabel));\n          // Add links\n          adjacencyList[parentLabel].forEach(function(childLabel) {\n            links.push(\n              new Link()\n                .connect(parentLabel, childLabel)\n                .setLabelText(parentLabel + \"-\" + childLabel)\n            );\n          });\n        });\n\n        // Links must be added after all the elements. This is because when the links\n        // are added to the graph, link source/target\n        // elements must be in the graph already.\n        return elements.concat(links);\n      }\n    });\n\n    var LinkControls = joint.mvc.View.extend(\n      {\n        highlighter: {\n          name: \"stroke\",\n          options: {\n            attrs: {\n              stroke: \"lightcoral\",\n              \"stroke-width\": 4\n            }\n          }\n        },\n\n        events: {\n          change: \"updateLink\",\n          input: \"updateLink\"\n        },\n\n        init: function() {\n          this.highlight();\n          this.updateControls();\n        },\n\n        updateLink: function() {\n          this.options.cellView.model.set(this.getModelAttributes(), {\n            layout: true\n          });\n        },\n\n        updateControls: function() {\n          var link = this.options.cellView.model;\n\n          this.$(\"#labelpos\").val(link.get(\"labelPosition\"));\n          this.$(\"#labeloffset\").val(link.get(\"labelOffset\"));\n          this.$(\"#minlen\").val(link.get(\"minLen\"));\n          this.$(\"#weight\").val(link.get(\"weight\"));\n        },\n\n        getModelAttributes: function() {\n          return {\n            minLen: parseInt(this.$(\"#minlen\").val(), 10),\n            weight: parseInt(this.$(\"#weight\").val(), 10),\n            labelPosition: this.$(\"#labelpos\").val(),\n            labelOffset: parseInt(this.$(\"#labeloffset\").val(), 10)\n          };\n        },\n\n        onRemove: function() {\n          this.unhighlight();\n        },\n\n        highlight: function() {\n          this.options.cellView.highlight(\"rect\", {\n            highlighter: this.highlighter\n          });\n        },\n\n        unhighlight: function() {\n          this.options.cellView.unhighlight(\"rect\", {\n            highlighter: this.highlighter\n          });\n        }\n      },\n      {\n        create: function(linkView) {\n          this.remove();\n          this.instance = new this({\n            el: this.template.cloneNode(true),\n            cellView: linkView\n          });\n          this.instance.$el.insertAfter(\"#layout-controls\");\n        },\n\n        remove: function() {\n          if (this.instance) {\n            this.instance.remove();\n            this.instance = null;\n          }\n        },\n\n        refresh: function() {\n          if (this.instance) {\n            this.instance.unhighlight();\n            this.instance.highlight();\n          }\n        },\n\n        instance: null,\n\n        template: document\n          .getElementById(\"link-controls-template\")\n          .content.querySelector(\".controls\")\n      }\n    );\n    var controls = new LayoutControls({\n      el: this.layoutControls.current,\n      paper: new joint.dia.Paper({\n        el: this.paperContainer.current,\n        interactive: function(cellView) {\n          return cellView.model.isElement();\n        }\n      }).on(\n        {\n          \"link:pointerdown\": LinkControls.create,\n          \"blank:pointerdown element:pointerdown\": LinkControls.remove\n        },\n        LinkControls\n      ),\n      adjacencyList: {\n        a: [\"b\", \"c\", \"d\"],\n        b: [\"d\", \"e\"],\n        c: [],\n        d: [],\n        e: [\"e\"],\n        f: [],\n        g: [\"b\", \"i\"],\n        h: [\"f\"],\n        i: [\"f\", \"h\"]\n      }\n    }).on(\n      {\n        layout: LinkControls.refresh\n      },\n      LinkControls\n    );\n\n    controls.layout();\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <div\n          id=\"layout-controls\"\n          className=\"controls\"\n          ref={this.layoutControls}\n        >\n          <label for=\"ranker\">Ranker:</label>\n          <select id=\"ranker\">\n            <option value=\"network-simplex\" selected>\n              network-simplex\n            </option>\n            <option value=\"tight-tree\">tight-tree</option>\n            <option value=\"longest-path\">longer-path</option>\n          </select>\n          <label for=\"rankdir\">RankDir:</label>\n          <select id=\"rankdir\">\n            <option value=\"TB\" selected>\n              TB\n            </option>\n            <option value=\"BT\">BT</option>\n            <option value=\"RL\">RL</option>\n            <option value=\"LR\">LR</option>\n          </select>\n          <label for=\"align\">Align:</label>\n          <select id=\"align\">\n            <option value=\"UL\" selected>\n              UL\n            </option>\n            <option value=\"UR\">UR</option>\n            <option value=\"DL\">DL</option>\n            <option value=\"DR\">DR</option>\n          </select>\n          <label for=\"ranksep\">RankSep:</label>\n          <input id=\"ranksep\" type=\"range\" min=\"1\" max=\"100\" value=\"50\" />\n          <label for=\"edgesep\">EdgeSep:</label>\n          <input id=\"edgesep\" type=\"range\" min=\"1\" max=\"100\" value=\"50\" />\n          <label for=\"nodesep\">NodeSep:</label>\n          <input id=\"nodesep\" type=\"range\" min=\"1\" max=\"100\" value=\"50\" />\n        </div>\n        <div id=\"paper\" className=\"paper\" ref={this.paperContainer} />\n      </div>\n    );\n  }\n}\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App />, rootElement);\n"]},"metadata":{},"sourceType":"module"}